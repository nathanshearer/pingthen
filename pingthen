#!/bin/bash

#----------------------------------------------------------------------------
# pingthen
# Copyright (C) 2013 Nathan Shearer
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to:
#   The Free Software Foundation Inc.
#   51 Franklin Street
#   Fifth Floor
#   Boston, MA
#   02110-1301
#   USA

NAME="pingthen"
CODENAME="pingthen"
COPYRIGHT="Copyright (C) 2013 Nathan Shearer"
VERSION="1.0.0.0"

function pingthen_fail
{
	echo "pingthen_fail is not currently configured to do anything"
}

function pingthen_success
{
	echo "pingthen_success is not currently configured to do anything"
}

# \brief Ensures dependencies are present
# \param $@ The dependencies to check for
function shearer_check_dependencies
{
	for TOOL in "$@"; do
		if ! type "$TOOL" >/dev/null 2>/dev/null; then
			echo "$CODENAME: \"$TOOL\" is required for this application to work correctly." >&2
			exit
		fi
	done
}

# \brief Sends an email
# \param $1 The e-mail address
# \param $2 The subject
# \param $3 The message
function shearer_email
{
	echo "shearer_email" "$@" >> "$LOG"
	cat "$3" | mail -s "$2" "$1"
}

# \brief Cleans up the environment and exits
# \param $1 The exit code
# \param $2 The exit message
#
# If DEBUG=true then temporary files are not deleted.
function shearer_exit
{
	#echo "shearer_exit" "$@" >>"$LOG"
	local EXIT="$1"
	local MESSAGE="$2"
	if [ "$EXIT" = "" ]; then
		EXIT=0
	fi
	if [ "$MESSAGE" = "" ]; then
		MESSAGE="An unrecoverable error has occurred"
	fi
	if ! $DEBUG; then
		rm -rf "$TMP"
	else
		printf "Debug mode is enabled. Temporary files in \"$TMP\" will *not* be deleted.\n"
	fi
	case $EXIT in
		0) exit;;
		*) echo "$CODENAME: $MESSAGE" >&2; exit $EXIT;;
	esac
}

# \brief Displays the help and exits the program
function shearer_help
{
	printf "This script pings a host and executes arbitrary commands depending on a success or fail condition.\n\n"
	printf "Usage:\n"
	printf "  $CODENAME [options]\n"
	printf "Options:\n"
	printf "  -h\n"
	printf "    Display this help message and exit.\n"
	printf "  -n N\n"
	printf "    Sets the niceness to N (default 0).\n"
	printf "  -r 8.8.8.8\n"
	printf "    The remote host to ping.\n"
	printf "  -v\n"
	printf "    Print the version and exit.\n"
	printf "Examples:\n"
	printf "  $CODENAME -h\n"
	printf "  $CODENAME -n 5\n"
	printf "  $CODENAME -v\n"
	exit
}

# \brief Swaps files $1 and $2
function shearer_swap
{
	mv "$1" "$TMP/swap"
	mv "$2" "$1"
	mv "$TMP/swap" "$2"
}

# \brief Prints out the version and copyright and exits this program
function shearer_version
{
	printf "$NAME $VERSION $COPYRIGHT\n"
	exit
}

#------------------------------------------------------------------------------
# default configuration

DEBUG=false
NICE=0
TMP="/tmp"

REMOTE_HOST=8.8.8.8    # The remote host to ping
PING_DELAY=5s          # Delay for 3 seconds between each ping attempt
PING_FAIL=3            # If 3 ping attempts fail, then run the failure commands
PING_SEND=3            # Ping 3 times
FAIL_ON=3              # Run pingthen_fail when 3 or more attempts fails
SUCCESS_ON=3           # Run pingthen_success when 3 or more attempts succeed

#------------------------------------------------------------------------------
# config files

if [ -r /etc/$CODENAME.conf ]; then
	. /etc/$CODENAME.conf
fi
if [ -r ~/.$CODENAME.conf ]; then
	. ~/.$CODENAME.conf
fi

#------------------------------------------------------------------------------
# command line arguments

while getopts "hn:r:v" OPTION; do
	case "$OPTION" in
		"h") shearer_help;;
		"n") NICE="$OPTARG";;
		"r") REMOTE_HOST="$OPTARG";;
		"v") shearer_version;;
		*) shearer_help;;
	esac
done
shift $(( $OPTIND - 1 ))

#------------------------------------------------------------------------------
# prepare environment

trap shearer_exit EXIT SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM
TMP="$TMP/$CODENAME.$$"
mkdir -p "$TMP"
LOG="$TMP/log"
touch "$LOG"
renice $NICE $$ >>"$LOG" 2>>"$LOG"

#------------------------------------------------------------------------------
# begin execution

PING_SENT=0
PING_RECEIVED=0
PING_LOST=0
for PING_ATTEMPT in `seq 1 $PING_SEND`; do
	ping $REMOTE_HOST -c 1 >>"$LOG" 2>>"$LOG"
	PING_RETURN=$?
	if [ $PING_RETURN -eq 0 ]; then
		PING_RECEIVED=$(($PING_RECEIVED+1))
	fi
	if [ $PING_RETURN -ne 0 ]; then
		PING_LOST=$(($PING_LOST+1))
	fi
	PING_SENT=$(($PING_SENT+1))
	sleep $PING_DELAY
done

echo "$PING_SENT transmitted, $PING_RECEIVED received, $PING_LOST lost"
if [ $PING_RECEIVED -ge $SUCCESS_ON ]; then
	pingthen_success
fi
if [ $PING_LOST -ge $FAIL_ON ]; then
	pingthen_fail
fi

$0